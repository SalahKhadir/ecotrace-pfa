# Generated by Django 4.2.7 on 2025-06-22 15:38

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Collecte',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reference', models.CharField(default='', help_text='Référence unique de la collecte', max_length=20, unique=True)),
                ('date_collecte', models.DateField()),
                ('date_prevue', models.DateField(blank=True, null=True)),
                ('mode_collecte', models.CharField(choices=[('domicile', 'Collecte à domicile'), ('apport', 'Apport volontaire')], default='domicile', max_length=20)),
                ('statut', models.CharField(choices=[('PLANIFIEE', 'Planifiée'), ('EN_COURS', 'En cours'), ('TERMINEE', 'Terminée'), ('ANNULEE', 'Annulée')], default='PLANIFIEE', max_length=20)),
                ('adresse', models.TextField(blank=True, null=True)),
                ('telephone', models.CharField(blank=True, max_length=20, null=True)),
                ('point_collecte', models.CharField(blank=True, max_length=200, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Collecte',
                'verbose_name_plural': 'Collectes',
                'db_table': 'waste_collecte',
                'ordering': ['-date_collecte'],
            },
        ),
        migrations.CreateModel(
            name='FormulaireCollecte',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reference', models.CharField(default='', help_text='Référence unique du formulaire', max_length=20, unique=True)),
                ('type_dechets', models.CharField(choices=[('ordinateur', 'Ordinateur / Laptop'), ('smartphone', 'Smartphone / Tablette'), ('electromenager', 'Électroménager'), ('televiseur', 'Téléviseur / Écran'), ('composants', 'Composants électroniques'), ('autres', 'Autres')], help_text='Type de déchets à collecter', max_length=20)),
                ('description', models.TextField(help_text='Description détaillée des déchets')),
                ('quantite_estimee', models.CharField(blank=True, choices=[('1-5kg', '1-5 kg'), ('5-10kg', '5-10 kg'), ('10-20kg', '10-20 kg'), ('20kg+', 'Plus de 20 kg')], help_text='Quantité estimée', max_length=10, null=True)),
                ('mode_collecte', models.CharField(choices=[('domicile', 'Collecte à domicile - Vous attendez'), ('apport', 'Apport volontaire - Vous apportez')], default='domicile', help_text='Mode de collecte choisi', max_length=20)),
                ('date_souhaitee', models.DateField(help_text='Date souhaitée pour la collecte')),
                ('creneau_horaire', models.CharField(blank=True, choices=[('matin', 'Matin (8h-12h)'), ('apres_midi', 'Après-midi (14h-18h)'), ('flexible', 'Flexible')], help_text='Créneau horaire souhaité', max_length=15, null=True)),
                ('adresse_collecte', models.TextField(help_text='Adresse où effectuer la collecte')),
                ('telephone', models.CharField(help_text='Numéro de téléphone de contact', max_length=20)),
                ('instructions_speciales', models.TextField(blank=True, help_text='Instructions particulières pour la collecte', null=True)),
                ('photo1', models.ImageField(blank=True, help_text='Photo des déchets (optionnel)', null=True, upload_to='formulaires/photos/')),
                ('photo2', models.ImageField(blank=True, help_text='Photo supplémentaire (optionnel)', null=True, upload_to='formulaires/photos/')),
                ('photo3', models.ImageField(blank=True, help_text='Photo supplémentaire (optionnel)', null=True, upload_to='formulaires/photos/')),
                ('statut', models.CharField(choices=[('SOUMIS', 'Soumis'), ('EN_ATTENTE', 'En attente de validation'), ('VALIDE', 'Validé'), ('REJETE', 'Rejeté'), ('EN_COURS', 'En cours de traitement'), ('TERMINE', 'Terminé')], default='SOUMIS', max_length=20)),
                ('point_collecte', models.CharField(blank=True, help_text='Point de collecte pour apport volontaire', max_length=200, null=True)),
                ('horaires_ouverture', models.TextField(blank=True, help_text="Horaires d'ouverture du point de collecte", null=True)),
                ('date_creation', models.DateTimeField(auto_now_add=True)),
                ('date_modification', models.DateTimeField(auto_now=True)),
                ('date_traitement', models.DateTimeField(blank=True, null=True)),
                ('utilisateur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='formulaires_collecte', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Formulaire de collecte',
                'verbose_name_plural': 'Formulaires de collecte',
                'db_table': 'waste_formulaire_collecte',
                'ordering': ['-date_creation'],
            },
        ),
        migrations.CreateModel(
            name='Dechet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(help_text='Type de déchet électronique', max_length=100)),
                ('categorie', models.CharField(help_text='Catégorie du déchet', max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
                ('quantite', models.FloatField(help_text='Quantité en kg')),
                ('etat', models.CharField(choices=[('COLLECTE', 'Collecté'), ('TRI', 'En cours de tri'), ('A_RECYCLER', 'À recycler'), ('RECYCLE', 'Recyclé'), ('A_DETRUIRE', 'À détruire'), ('DETRUIT', 'Détruit')], default='COLLECTE', max_length=20)),
                ('photo_avant', models.ImageField(blank=True, help_text='Photo avant traitement', null=True, upload_to='dechets/photos/')),
                ('photo_apres', models.ImageField(blank=True, help_text='Photo après traitement', null=True, upload_to='dechets/photos/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('date_traitement', models.DateTimeField(blank=True, null=True)),
                ('collecte', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dechets', to='waste_management.collecte')),
                ('technicien', models.ForeignKey(blank=True, limit_choices_to={'role': 'TECHNICIEN'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='dechets_traites', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Déchet',
                'verbose_name_plural': 'Déchets',
                'db_table': 'waste_dechet',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddField(
            model_name='collecte',
            name='formulaire_origine',
            field=models.ForeignKey(blank=True, help_text="Formulaire à l'origine de cette collecte", null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='collectes_associees', to='waste_management.formulairecollecte'),
        ),
        migrations.AddField(
            model_name='collecte',
            name='transporteur',
            field=models.ForeignKey(blank=True, limit_choices_to={'role': 'TRANSPORTEUR'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='transports_assignes', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='collecte',
            name='utilisateur',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='collectes', to=settings.AUTH_USER_MODEL),
        ),
    ]
